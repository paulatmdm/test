"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var selection_service_1 = require("./selection.service");
/**
 * @hidden
 */
var SelectableDirective = (function () {
    function SelectableDirective(selectionService, el, renderer) {
        this.selectionService = selectionService;
        this.el = el;
        this.renderer = renderer;
        this.ignored = /^(a|input|textarea|button)$/i;
        if (this.selectionService.options.enabled) {
            this.destroyClick = this.renderer.listen(this.el.nativeElement, "mousedown", this.onMousedown.bind(this));
        }
    }
    SelectableDirective.prototype.ngOnDestroy = function () {
        if (this.destroyClick) {
            this.destroyClick();
        }
    };
    SelectableDirective.prototype.onMousedown = function (event) {
        if (!this.selectionService.options.enabled) {
            return;
        }
        if (this.shouldSelect(event.target.tagName) && !this.selectionService.options.checkboxOnly) {
            event.preventDefault();
            this.selectionService.handle(this.item, event);
        }
    };
    SelectableDirective.prototype.shouldSelect = function (tagName) {
        return !this.ignored.test(tagName);
    };
    return SelectableDirective;
}());
SelectableDirective.decorators = [
    { type: core_1.Directive, args: [{
                selector: '[kendoGridSelectable]'
            },] },
];
/** @nocollapse */
SelectableDirective.ctorParameters = function () { return [
    { type: selection_service_1.SelectionService, },
    { type: core_1.ElementRef, },
    { type: core_1.Renderer2, },
]; };
SelectableDirective.propDecorators = {
    'item': [{ type: core_1.Input },],
};
exports.SelectableDirective = SelectableDirective;
