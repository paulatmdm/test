import { EventEmitter } from '@angular/core';
import { SelectableSettings } from './selectable-settings';
import { RowArgs } from "../row-class";
/**
 * The returned type of the `selection` event.
 */
export interface SelectionEvent {
    /**
     * The items that were added to the selection.
     */
    selectedRows: RowArgs[];
    /**
     * The items that were removed from the selection.
     */
    deselectedRows: RowArgs[];
    /**
     * Shows the state of the `Ctrl` key (or the `Command` key on a Mac) during the selection.
     */
    ctrlKey: boolean;
    /**
     * The index of the affected row.
     * This property is deprecated and will be removed in future versions.
     */
    index?: number;
    /**
     * The selected state of the affected row.
     * This property is deprecated and will be removed in future versions.
     */
    selected?: boolean;
}
/**
 * @hidden
 */
export declare class SelectionService {
    changes: EventEmitter<SelectionEvent>;
    lastSelectionStartIndex: number;
    currentSelection: RowArgs[];
    private settings;
    init(settings: any): void;
    isSelected(index: number): boolean;
    handle(item: any, event: any): void;
    toggle(item: any): any;
    toggleByIndex(index: number): any;
    select(item: any): any;
    addAllTo(item: any): any;
    readonly selected: number[];
    readonly options: SelectableSettings;
    private getIterator();
}
